{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\harsh\\\\Desktop\\\\swag-shop-web\\\\src\\\\services\\\\http-service.js\";\nimport 'whatwg-fetch';\nimport axios from 'axios';\nimport React from 'react';\nexport default class HttpService extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      loading: true\n    };\n\n    this.componentDidMount = () => {\n      axios.get('/product').then(res => {\n        this.setState({\n          loading: false,\n          items: res.data\n        });\n        console.log(this.state.items);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.items.map(data => {\n        /*#__PURE__*/\n        _jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: data.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: data.likes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this), console.log(data.title)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this);\n      }), \"jo\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n/*  {this.state.loading || this.state.person ?(\r\n                <div>loading</div>\r\n            ):\r\n            (\r\n            <div>\r\n            {this.state.items.map(data=>(\r\n                <div>\r\n                 <div> {data} </div>\r\n                </div>))}\r\n            </div>\r\n            )}*/","map":{"version":3,"sources":["C:/Users/harsh/Desktop/swag-shop-web/src/services/http-service.js"],"names":["axios","React","HttpService","Component","constructor","props","state","items","loading","componentDidMount","get","then","res","setState","data","console","log","render","map","title","likes"],"mappings":";;AAAA,OAAO,cAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAAyC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAClB,UAAMA,KAAN;AADkB,SAIlBC,KAJkB,GAIV;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,OAAO,EAAE;AAFL,KAJU;;AAAA,SAStBC,iBATsB,GASD,MAAI;AACzBT,MAAAA,KAAK,CAACU,GAAN,CAAU,UAAV,EAAsBC,IAAtB,CAA4BC,GAAD,IAAO;AAC9B,aAAKC,QAAL,CAAc;AACVL,UAAAA,OAAO,EAAC,KADE;AAEVD,UAAAA,KAAK,EAACK,GAAG,CAACE;AAFA,SAAd;AAIAC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWC,KAAvB;AACH,OAND;AAQK,KAlBiB;AAEnB;;AAiBCU,EAAAA,MAAM,GAAE;AACJ,wBAAO;AAAA,iBACF,KAAKX,KAAL,CAAWC,KAAX,CAAiBW,GAAjB,CAAqBJ,IAAI,IAAE;AACxB;AAAA;AAAA,kCACA;AAAA,sBAAMA,IAAI,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA,sBAAML,IAAI,CAACM;AAAX;AAAA;AAAA;AAAA;AAAA,kBAFA,EAGCL,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACK,KAAjB,CAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAMH,OAPA,CADE;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAWE;;AAhC8C;AAoCxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import 'whatwg-fetch'\r\nimport axios from 'axios';\r\nimport React from 'react'\r\n\r\nexport default class HttpService extends React.Component{\r\n    constructor(props){\r\n    super(props);\r\n  }\r\n\r\n    state = {\r\n        items :[],\r\n        loading: true\r\n    }\r\n\r\ncomponentDidMount =  ()=>{\r\naxios.get('/product').then((res)=>{\r\n    this.setState({\r\n        loading:false,\r\n        items:res.data\r\n    })\r\n    console.log(this.state.items)\r\n}\r\n)\r\n    }\r\n    render(){\r\n        return(<div>\r\n            {this.state.items.map(data=>{\r\n                <div>\r\n                <div>{data.title}</div>\r\n                <div>{data.likes}</div>\r\n                {console.log(data.title)}\r\n                </div>\r\n\r\n            })}\r\n            jo\r\n            </div>\r\n        )}\r\n    }\r\n\r\n\r\n/*  {this.state.loading || this.state.person ?(\r\n                <div>loading</div>\r\n            ):\r\n            (\r\n            <div>\r\n            {this.state.items.map(data=>(\r\n                <div>\r\n                 <div> {data} </div>\r\n                </div>))}\r\n            </div>\r\n            )}*/"]},"metadata":{},"sourceType":"module"}